generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  sessions  Session[]
  role      Role      @default(value: EDITOR)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("sessions")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String
  slug        String   @unique
  news        News[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

model News {
  id          String   @id @default(cuid())
  title       String
  description String
  imageId     String?  @map("image_id")
  image       Image?   @relation(fields: [imageId], references: [id], onDelete: SetNull)
  slug        String   @unique
  categoryId  String   @map("category_id")
  category    Category @relation(fields: [categoryId], references: [id])
  date        DateTime
  body        String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("news")
}

model Image {
  id        String   @id @default(cuid())
  url       String
  news      News?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("images")
}

enum Role {
  ADMIN
  EDITOR
}
